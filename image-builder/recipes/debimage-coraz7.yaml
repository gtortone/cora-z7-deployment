{{- $image := or .image "debian11.img" -}}
{{- $postinstall := or .postinstall "none" -}}

architecture: armhf

actions:

  - action: debootstrap
    suite: "bullseye"
    components:
      - main
    mirror: https://deb.debian.org/debian
    variant: minbase

  - action: run
    chroot: true
    command: echo coraz7 > /etc/hostname

  - action: unpack
    file: tarballs/openfpgaloader.tar.gz

  - action: unpack
    file: tarballs/xvc-adaptive.tar.gz
  
  - action: unpack
    file: tarballs/epics.tar.gz

  - action: unpack
    file: tarballs/bitstreams.tar.gz

  - action: unpack
    file: tarballs/runcontrol_configio.tar.gz

  - action: apt
    packages: 
      - dbus
      - telnet
      - socat
      - netcat
      - iptables
      - sudo
      - openssh-server
      - systemd-sysv
      - apt-utils
      - dialog
      - locales
      - minicom
      - picocom
      - screen
      - ser2net
      - curl
      - haveged
      - dhcpcd5
      - fdisk
      - udev 
      - netbase 
      - ifupdown 
      - iputils-ping 
      - wget 
      - net-tools
      - ntpdate
      - systemd-timesyncd
      - nano
      - less
      - kmod 
      - vim
      - file
      - parted
      - git
      - ca-certificates
      - libftdi1
      - libftdi1-dev
      - man-db
      - gcc 
      - g++ 
      - tcl
      - python3
      - python3-pip
      - python3-dev
      - libpython3-dev
      - swig
      - make 
      - pkg-config 
      - libusb-dev 
      - cmake 
      - zlib1g 
      - zlib1g-dev 
      - xc3sprog 
      - usbutils
      - perl
      - libpcre3
      - libpcre3-dev
      - supervisor
      - python3-numpy

  - action: run
    chroot: false
    command: cp -r ${ARTIFACTDIR}/postinstall/{{ $postinstall }}/* ${ROOTDIR}/boot

  - action: run
    chroot: false
    command: cp -r ${ARTIFACTDIR}/postinstall/{{ $postinstall }}/boardfiles/* ${ROOTDIR}/boot

  - action: run
    chroot: false
    command: cp -r ${ARTIFACTDIR}/overlays/boot/* ${ROOTDIR}/boot

  - action: run
    chroot: true
    script: ../scripts/build-branch-control.sh

  - action: run
    chroot: true
    script: ../scripts/build-leaf-monitor.sh

  - action: run
    chroot: true
    script: ../scripts/build-xadc-ioc.sh

  - action: run
    chroot: true
    script: ../scripts/build-gpd4303s-ioc.sh

  - action: run
    chroot: true
    script: ../scripts/untar-modules.sh

  - action: run
    chroot: true
    command: echo "en_US.UTF-8 UTF-8" > /etc/locale.gen; /usr/sbin/locale-gen; /usr/sbin/update-locale LANG=en_US.UTF-8

  - action: overlay
    source: ../overlays/sshd
    destination: /etc/ssh

  - action: overlay
    source: ../overlays/bash/bashrc
    destination: /root/.bashrc

  - action: overlay
    source: ../overlays/vim/vimrc
    destination: /root/.vimrc

  - action: overlay
    source: ../overlays/network
    destination: /etc/network/interfaces.d

  - action: run
    chroot: true
    command: ln -s /boot /lib/firmware

  - action: overlay
    source: ../overlays/rc
    destination: /etc

  - action: overlay
    source: ../overlays/motd
    destination: /etc

  - action: overlay
    source: ../overlays/ser2net/etc
    destination: /etc

  - action: overlay
    source: ../overlays/ser2net/lib
    destination: /lib

  - action: overlay
    source: ../overlays/firstboot
    destination: /

  - action: run
    chroot: true
    command: systemctl enable firstboot.service

  - action: run
    chroot: true
    command: systemctl enable serial-getty@ttyPS0.service

  - action: run
    chroot: true
    command: systemctl enable ser2net.service

  - action: run
    chroot: true
    command: systemctl enable supervisor.service

  - action: run
    chroot: true
    command: echo "ttyPS0" >> /etc/securetty

  - action: run
    chroot: true
    command: echo 'root:$1$TzpfaNEc$tjqCamkIJFUytJokydS8w.' | /usr/sbin/chpasswd -e

  - action: image-partition
    imagename: {{ $image }}
    imagesize: 3GB
    partitiontype: msdos
    mountpoints:
      - mountpoint: /boot
        partition: boot
      - mountpoint: /
        partition: rootfs
    partitions:
      - name: boot 
        fs: fat32
        start: 0%
        end: 250 
        flags: [ boot ]
      - name: rootfs
        features: ["^orphan_file"]
        fs: ext4
        start: 250MB
        end: 100%

  - action: filesystem-deploy
    description: Deploying filesystem onto image

  - action: run
    postprocess: true
    command: bmaptool create {{ $image }} > {{ $image }}.bmap

  - action: run
    postprocess: true
    command: gzip -f {{ $image }}
